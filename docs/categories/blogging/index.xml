<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blogging on </title>
    <link>https://darrylcauldwell.github.io/categories/blogging/</link>
    <description>Recent content in blogging on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 18 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://darrylcauldwell.github.io/categories/blogging/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitHub Pages Git Branching Workflow</title>
      <link>https://darrylcauldwell.github.io/post/git-branch/</link>
      <pubDate>Fri, 18 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://darrylcauldwell.github.io/post/git-branch/</guid>
      <description>
        
          &lt;p&gt;Five years ago I moved my &lt;a href=&#34;https://darrylcauldwell.github.io/post/jekyll&#34;&gt;personal blog to GitHub Pages&lt;/a&gt;. Up to now, my workflow has been to clone to local repository make changes directly to master branch, build static website files, test locally and then push all changes upstream for GitHub pages to build. This simple workflow has worked perfectly however recently I find myself working across multiple devices and on multiple posts simultaneously.&lt;/p&gt;
&lt;p&gt;As such I have moved to use GitHub branching in my workflow to assist meet the demands of my evolved working situation.&lt;/p&gt;
&lt;h2 id=&#34;create-new-branch-for-post&#34;&gt;Create new branch for post&lt;/h2&gt;
&lt;p&gt;First think to do is clone the existing repository from GitHub.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone https://github.com/darrylcauldwell/darrylcauldwell.github.io.git
cd darrylcauldwell.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If I check there is single branch named &amp;lsquo;master&amp;rsquo;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git branch

* master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;First step is to create new branch to work in and switch to it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git checkout -b blog-branch

git branch

master
* blog-branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Add files,  make changes within branch etc, .&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;On branch blog-branch
Your branch is up to date with &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;origin/blog-branch&amp;#39;&lt;/span&gt;.

Untracked files:
  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;git add &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to include in what will be committed&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        content/post/git-branch.md

no changes added to commit &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;git add&amp;#34;&lt;/span&gt; and/or &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;git commit -a&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once we&amp;rsquo;re happy with changes to the branch approve the changes and add the files to the index.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git add content/post/git-branch.md

git status                        
On branch blog-branch
Your branch is up to date with &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;origin/blog-branch&amp;#39;&lt;/span&gt;.

Changes to be committed:
  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;git restore --staged &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to unstage&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        modified:   content/post/git-branch.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then commit the changes to the local repository.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;these are changes I made&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;blog-branch 8b566a8&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; these are changes I made
 &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; file changed, &lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt; insertions&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;+&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; deletion&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once happy push the branch to remote upstream repository on GitHub.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git push origin blog-branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;make-changes-to-existing-branch&#34;&gt;Make changes to existing branch&lt;/h2&gt;
&lt;p&gt;The workflow is slightly different if I have created a branch and want to return to work on it.  To simulate this if I delete the folder with local repository and create new clone from GitHub again.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone https://github.com/darrylcauldwell/darrylcauldwell.github.io.git

Cloning into &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darrylcauldwell.github.io&amp;#39;&lt;/span&gt;...
remote: Enumerating objects: 7361, &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;.
remote: Counting objects: 100% &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;5996/5996&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;.
remote: Compressing objects: 100% &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1761/1761&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;.
remote: Total &lt;span style=&#34;color:#ae81ff&#34;&gt;7361&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;delta 2975&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, reused &lt;span style=&#34;color:#ae81ff&#34;&gt;5678&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;delta 2660&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, pack-reused &lt;span style=&#34;color:#ae81ff&#34;&gt;1365&lt;/span&gt;
Receiving objects: 100% &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;7361/7361&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, 66.43 MiB | 5.85 MiB/s, &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;.
Resolving deltas: 100% &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3667/3667&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When creating new clone only the &amp;lsquo;master&amp;rsquo; branch, we can see the branch on remote/origin.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git branch -a

* master
  remotes/origin/HEAD -&amp;gt; origin/master
  remotes/origin/blog-branch
  remotes/origin/master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When look to switch local respository to branch with identical name the client is intelligent enough to link the local and remote and mark to track.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git checkout blog-branch

Branch &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blog-branch&amp;#39;&lt;/span&gt; set up to track remote branch &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blog-branch&amp;#39;&lt;/span&gt; from &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;origin&amp;#39;&lt;/span&gt;.
Switched to a new branch &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blog-branch&amp;#39;&lt;/span&gt;

git branch -a           

* blog-branch
  master
  remotes/origin/HEAD -&amp;gt; origin/master
  remotes/origin/blog-branch
  remotes/origin/master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;From here we can continue making changes, commit the files to local repository and then try and push them to remote as before.&lt;/p&gt;
&lt;h2 id=&#34;in-branch-blog-build-and-testing&#34;&gt;In-branch blog build and testing&lt;/h2&gt;
&lt;p&gt;So far I have been updating blog content in markdown files. The Hugo engine takes these markdown files and creates all of the pages required for static website. Prior to posting it is good to test the post formatting looks good, the image links work etc. From within the branch we can run Hugo and use browser to test.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo server

Start building sites … 

                   | EN   
-------------------+------
  Pages            | &lt;span style=&#34;color:#ae81ff&#34;&gt;242&lt;/span&gt;  
  Paginator pages  |  &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;  
  Non-page files   |   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  
  Static files     | &lt;span style=&#34;color:#ae81ff&#34;&gt;274&lt;/span&gt;  
  Processed images |   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  
  Aliases          |  &lt;span style=&#34;color:#ae81ff&#34;&gt;86&lt;/span&gt;  
  Sitemaps         |   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  
  Cleaned          |   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  

Built in &lt;span style=&#34;color:#ae81ff&#34;&gt;205&lt;/span&gt; ms
Watching &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; changes in /Users/darrylcauldwell/Development/darrylcauldwell.github.io/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;archetypes,content,layouts,static,themes&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
Watching &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; config changes in /Users/darrylcauldwell/Development/darrylcauldwell.github.io/config/_default, /Users/darrylcauldwell/Development/darrylcauldwell.github.io/config/_default/menus
Environment: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;development&amp;#34;&lt;/span&gt;
Serving pages from memory
Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender
Web Server is available at http://localhost:1313/ &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;bind address 127.0.0.1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Press Ctrl+C to stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In my configuration GitHub pages is configured to use the /docs folder.  When we&amp;rsquo;ve tested and all looks good can then look to rebuild the static website files into that folder.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo --destination ~/Development/darrylcauldwell.github.io/docs

Start building sites … 

                   | EN   
-------------------+------
  Pages            | &lt;span style=&#34;color:#ae81ff&#34;&gt;242&lt;/span&gt;  
  Paginator pages  |  &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;  
  Non-page files   |   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  
  Static files     | &lt;span style=&#34;color:#ae81ff&#34;&gt;274&lt;/span&gt;  
  Processed images |   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  
  Aliases          |  &lt;span style=&#34;color:#ae81ff&#34;&gt;86&lt;/span&gt;  
  Sitemaps         |   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  
  Cleaned          |   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  

Total in &lt;span style=&#34;color:#ae81ff&#34;&gt;263&lt;/span&gt; ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As we can see from the output adding a single post actually rebuilds many pages. It isn&amp;rsquo;t really practical to add each to repository manually but we can use wildcard and add all.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add .
git commit -m &#39;new post on github branching&#39;

[blog-branch e202461] new post on github branching
 189 files changed, 4147 insertions(+), 2184 deletions(-)
 create mode 100644 docs/post/git-branch/index.html

git push origin blog-branch

Enumerating objects: 646, done.
Counting objects: 100% (646/646), done.
Delta compression using up to 8 threads
Compressing objects: 100% (277/277), done.
Writing objects: 100% (382/382), 202.55 KiB | 4.71 MiB/s, done.
Total 382 (delta 192), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (192/192), completed with 79 local objects.
To https://github.com/darrylcauldwell/darrylcauldwell.github.io.git
   da04b9c..e202461  blog-branch -&amp;gt; blog-branch
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So at this stage we&amp;rsquo;ve got out local and remote branch in sync.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git branch -a -v  

* blog-branch                e202461 new post on github branching
  master                     fb51479 heading formats
  remotes/origin/HEAD        -&amp;gt; origin/master
  remotes/origin/blog-branch e202461 new post on github branching
  remotes/origin/master      fb51479 heading formats
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;merge-blog-post-branch-to-master&#34;&gt;Merge blog post branch to master&lt;/h2&gt;
&lt;p&gt;Once we&amp;rsquo;re happy that the new post branch is good we can look to merge that into &amp;lsquo;master&amp;rsquo; and be processed by GitHub Pages.&lt;/p&gt;
&lt;p&gt;As this is single user repository I could just use &amp;lsquo;git merge&amp;rsquo; to merge the branch. Merging branches in multi-user repository the merge might come via a merge pull request which allows for change review. In the past I&amp;rsquo;d typically made pull requests via the web UI. I recently found the new git cli &amp;lsquo;gh&amp;rsquo; has capability to create pull-request.&lt;/p&gt;
&lt;p&gt;&amp;laquo;&amp;laquo;&amp;laquo;&amp;lt; HEAD&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=======&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;64b6c80a97e2116e452e3ddf6d553af1697ac1de
gh pr create &amp;ndash;title &amp;ldquo;New post about github branching&amp;rdquo; &amp;ndash;body &amp;ldquo;New post about github branching with github pages&amp;rdquo; -H blog-branch&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Creating pull request for blog-branch into master in darrylcauldwell/darrylcauldwell.github.io
&lt;a href=&#34;https://github.com/darrylcauldwell/darrylcauldwell.github.io/pull/2&#34;&gt;https://github.com/darrylcauldwell/darrylcauldwell.github.io/pull/2&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
As pull requests require independant review I cannot approve my own pull request but I can add some comments.

![GitHub Pull Request Review](/images/git-branch-pr.png)

I can then look to merge.

![GitHub Pull Request Merge](/images/git-branch-pr.png)

When we&#39;re merged into &#39;master&#39; branch can look to remove the branch both locally and remotely.

```bash
git branch -d blog-branch
git push origin -d blog-branch

To https://github.com/darrylcauldwell/darrylcauldwell.github.io.git
 - [deleted]         blog-branch

git branch -a

* master
  remotes/origin/HEAD -&amp;gt; origin/master
  remotes/origin/master
&lt;/code&gt;&lt;/pre&gt;
        
      </description>
    </item>
    
    <item>
      <title>Migrate Wordpress to GitHub Pages</title>
      <link>https://darrylcauldwell.github.io/post/jekyll/</link>
      <pubDate>Wed, 29 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://darrylcauldwell.github.io/post/jekyll/</guid>
      <description>
        
          &lt;p&gt;There are the steps I used to migrate my blog from Wordpress to GitHub Pages,  first I will try and describe why I am doing this.&lt;/p&gt;
&lt;h2 id=&#34;migrate-to-learn&#34;&gt;Migrate To Learn&lt;/h2&gt;
&lt;p&gt;Learning new technical skills is straight forwards but while building any new skill building a muscle memory for command syntax is only achieved by taking as many opportunities to exercise the muscle as possible.&lt;/p&gt;
&lt;p&gt;I found at my old job I was more and more using distributed source control more and more to help my day to day work, since changing job this required much less. The goal at my employer is to use this in the near future so editing my personal blog is a good way to keep learning and building knowledge with github. By migrating my blog to GitHub Pages and Jekyll, publishing a blog post becomes committing changes and pushing them to GitHub.&lt;/p&gt;
&lt;p&gt;Albeit distributed source control is used much less in my new role writting infrastructure configuration code is still very much required. I&amp;rsquo;ve moved away from Sublime Text and been starting to use the excellent Visual Studio Code at work. I write much less code at home on Mac and struggle with the shortcut key differences. By maintaining my personal blog as a series of files which I use a code editor will help me with this.&lt;/p&gt;
&lt;p&gt;While working with Ansible I use YAML formatted files, using Jeykll and passing variables seems a great way to keep using and learning.&lt;/p&gt;
&lt;h2 id=&#34;migration-overview&#34;&gt;Migration Overview&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Install Jekyll&lt;/li&gt;
&lt;li&gt;Create new Jekyll project&lt;/li&gt;
&lt;li&gt;Create GitHub Pages site&lt;/li&gt;
&lt;li&gt;Export Wordpress posts as Jekyll&lt;/li&gt;
&lt;li&gt;Test posts on Jekyll (Local)&lt;/li&gt;
&lt;li&gt;Commit exported posts to GitHub Pages&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;install-jekyll&#34;&gt;Install Jekyll&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://jekyllrb.com/docs/installation&#34;&gt;Jekyll install&lt;/a&gt; requires Ruby and Ruby Gems be in place before starting.
These are included with OS X so we can just pen terminal and run the following to install.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo gem install jekyll
sudo gem install jekyll-paginate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;create-new-jekyll-project&#34;&gt;Create new Jekyll project&lt;/h2&gt;
&lt;p&gt;A Jekyll project is just a collection of files so first its worth creating a folder to house the project then running a Jekyll command
to create the framework files.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mkdir Website
cd Website/
jekyll new darrylcauldwell.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;create-github-pages-site&#34;&gt;Create GitHub Pages site&lt;/h2&gt;
&lt;p&gt;Create a personal GitHub repository called &lt;em&gt;projectname&lt;/em&gt;.github.io,  for example &amp;lt;&lt;em&gt;&amp;gt;darrylcaudwell.github.io&amp;lt;&lt;/em&gt;&amp;gt;.&lt;/p&gt;
&lt;p&gt;Initialise your Jekyll website project folder as a local git repository, add all the files to the local repository, link the local
git repository to github.com, create first commit and then push this to master.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git init
git add .
git remote add github git@github.com:darrylcauldwell/darrylcauldwell.github.io
git add README.md
git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;first commit&amp;#34;&lt;/span&gt;
git remote add origin https://github.com/darrylcauldwell/darrylcauldwell.github.io.git
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;By performing this commit should trigger the creation of your SSL secured GitHub Pages website in my example the URL is.
&lt;a href=&#34;https://darrylcauldwell.github.io&#34;&gt;https://darrylcauldwell.github.io&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;export-wordpress-posts-as-jekyll&#34;&gt;Export Wordpress posts as Jekyll&lt;/h2&gt;
&lt;p&gt;So by this stage we have the website running with our chosen theme and we&amp;rsquo;re now ready to migrate across all old posts from wordpress.&lt;/p&gt;
&lt;p&gt;Within existing wordpress site install the &lt;a href=&#34;https://wordpress.org/plugins/wp2jekyll/&#34;&gt;&amp;lsquo;WordPress2Jekyll&amp;rsquo;&lt;/a&gt; plugin and use this to export the site as a zip file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cd yourproject
jekyll build
git add .
git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;imports old blog posts&amp;#34;&lt;/span&gt;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;redirect-url&#34;&gt;Redirect URL&lt;/h2&gt;
&lt;p&gt;Once your happy that your website is fully funcional on the URL &lt;em&gt;yourproject&lt;/em&gt;.github.io you can then add a DNS alias to point your domain
name to the new site.  After a few days if your still happy you can then remove your account from previous hosting company.&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
